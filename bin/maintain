#!/bin/bash

# bin/maintain - System maintenance script

# === DOTFILES directory ===
DOTFILES_DIR="$HOME/.dotfiles"

# Show help and exit early
if [[ "$1" == "--help" ]]; then
  echo "Usage: maintenance [--dry | --dry-run]"
  echo "Runs Homebrew and system maintenance tasks."
  echo
  echo "Options:"
  echo "  --dry, --dry-run   Simulate tasks without making changes"
  return 0 2>/dev/null || exit 0
fi

set -e

# Handle optional --dry flag
DRY_RUN=false
if [[ "$1" == "--dry" || "$1" == "--dry-run" ]]; then
  DRY_RUN=true
fi

GREEN="\033[0;32m"
RED="\033[0;31m"
BLUE="\033[0;34m"
RESET="\033[0m"

print_section() {
  echo -e "\n${BLUE}› $1${RESET}"
}

run_task() {
  local label="$1"
  local cmd_output
  shift
  if $DRY_RUN; then
    echo -e "[dry-run] $label"
  else
    # Capture command output for potential error reporting
    cmd_output=$("$@" 2>&1)
    if [ $? -eq 0 ]; then
      echo -e "${GREEN}✓${RESET} $label"
    else
      echo -e "${RED}✗${RESET} $label"
      echo -e "Error details: $cmd_output" >&2
    fi
  fi
}

# --- Sync .dotfiles and .dotlocal repositories ---
sync_repo() {
  print_section "Syncing dotfiles and local repositories"

  DOTLOCAL_DIR="$HOME/Library/Mobile Documents/com~apple~CloudDocs/Dotfiles/Dotlocal"

  # Sync .dotfiles repo
  echo "[..] Syncing .dotfiles repository..."
  if [ -d "$DOTFILES_DIR" ]; then
    if git -C "$DOTFILES_DIR" diff --quiet && git -C "$DOTFILES_DIR" diff --cached --quiet; then
      git -C "$DOTFILES_DIR" pull --rebase
      echo "[✔] .dotfiles synced"
    else
      echo "[${RED}✗${RESET}] Skipping .dotfiles pull — you have uncommitted changes"
    fi
  else
    echo "[${RED}✗${RESET}] Skipping .dotfiles — directory not found: $DOTFILES_DIR"
  fi

  # Sync .dotlocal repo
  echo "[..] Syncing .dotlocal repository..."
  if [ -d "$DOTLOCAL_DIR" ]; then
    if git -C "$DOTLOCAL_DIR" diff --quiet && git -C "$DOTLOCAL_DIR" diff --cached --quiet; then
      git -C "$DOTLOCAL_DIR" pull --rebase
      echo "[✔] .dotlocal synced"
    else
      echo "[${RED}✗${RESET}] Skipping .dotlocal pull — you have uncommitted changes"
    fi
  else
    echo "[${RED}✗${RESET}] Skipping .dotlocal — directory not found: $DOTLOCAL_DIR"
  fi
}

# --- Main maintenance tasks ---
print_section "System Maintenance Tasks"

# Ensure brew is in PATH
if [ -x /opt/homebrew/bin/brew ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -x /usr/local/bin/brew ]; then
  eval "$(/usr/local/bin/brew shellenv)"
fi

if ! command -v brew >/dev/null 2>&1; then
  echo -e "${RED}✗ Homebrew not found in PATH${RESET}"
  exit 1
fi

run_task "Syncing dotfiles and local repositories" sync_repo
run_task "Homebrew update" brew update
run_task "Homebrew upgrade" brew upgrade
run_task "Homebrew autoremove" brew autoremove
run_task "Homebrew cleanup" brew cleanup
run_task "Brew doctor check" brew doctor
run_task "Flush DNS cache" sudo dscacheutil -flushcache && sudo killall -HUP mDNSResponder

print_section "Maintenance Complete"
